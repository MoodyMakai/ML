# -*- coding: utf-8 -*-
"""Copy of PenguinBase.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lwTz45u4JPpZw44N0clmGFR4mTKwD4IE
"""

import requests
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn import datasets
from sklearn.inspection import DecisionBoundaryDisplay

pengUrl = "https://raw.githubusercontent.com/allisonhorst/palmerpenguins/main/inst/extdata/penguins.csv"

#pengContent = requests.get(pengUrl).content

pengData = pd.read_csv(pengUrl, header=0)

species = pengData.dropna()['species'].values
island = pengData['island'].values
billLengthMM = pengData['bill_length_mm'].values
billDepthMM = pengData['bill_depth_mm'].values
flipperLengthMM = pengData.dropna()['flipper_length_mm'].values
bodyMassG = pengData.dropna()['body_mass_g'].values
#mask1 =np.isnan(flipperLengthMM)
#mask2 =np.isnan(bodyMassG)
news = np.c_[(flipperLengthMM, bodyMassG)]




Y = species
X = np.reshape(news,(-1,2))
print(X)

logreg = LogisticRegression(C=1e5)
logreg.fit(X, Y)

_, ax = plt.subplots(figsize=(4, 3))
DecisionBoundaryDisplay.from_estimator(
    logreg,
    X,
    cmap=plt.cm.Paired,
    ax=ax,
    response_method="predict",
    plot_method="pcolormesh",
    shading="auto",
    xlabel="Mass",
    ylabel="Flipper Length",
    eps=0.5,
)
dic = {"Adelie":1, "Gentoo":2, "Chinstrap":3}
Y = np.array([dic[s] for s in species])
plt.scatter(X[:, 0], X[:, 1], c=Y, edgecolors="k", cmap=plt.cm.Paired)


plt.xticks(())
plt.yticks(())

plt.show()
print(Y)
