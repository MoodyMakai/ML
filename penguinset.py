# -*- coding: utf-8 -*-
"""PenguinSet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lwTz45u4JPpZw44N0clmGFR4mTKwD4IE
"""

import requests
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn import datasets
from sklearn.inspection import DecisionBoundaryDisplay
from sklearn.impute import SimpleImputer

pengUrl = "https://raw.githubusercontent.com/allisonhorst/palmerpenguins/main/inst/extdata/penguins.csv"

#pengContent = requests.get(pengUrl).content

pengData = pd.read_csv(pengUrl, header=0)
imp = SimpleImputer(missing_values=np.nan, strategy='mean')
imp.fit([[1, 2], [np.nan, 3], [7, 6]])
SimpleImputer()

species = pengData.dropna()['species'].values
island = pengData['island'].values
billLengthMM = pengData['bill_length_mm'].values
billDepthMM = pengData['bill_depth_mm'].values
flipperLengthMM = pengData.dropna()['flipper_length_mm'].values
bodyMassG = pengData.dropna()['body_mass_g'].values
news = imp.transform(np.c_[billDepthMM, billLengthMM])

newz1 = np.delete(billDepthMM, range(1,12))
newz2 = np.delete(billLengthMM, range(1,12))
newz = imp.transform(np.c_[newz1, newz2])


Y = species
X = np.reshape(newz,(-1,2))
print(X)

logreg = LogisticRegression(C=1e5)
logreg.fit(X,Y)

_, ax = plt.subplots(figsize=(4, 3))
DecisionBoundaryDisplay.from_estimator(
    logreg,
    X,
    cmap=plt.cm.Paired,
    ax=ax,
    response_method="predict",
    plot_method="pcolormesh",
    shading="auto",
    xlabel="Mass",
    ylabel="Flipper Length",
    eps=0.5,
)
dic = {"Adelie":0, "Gentoo":1, "Chinstrap":2}
Y = np.array([dic[s] for s in species])
plt.scatter(X[:, 0], X[:, 1], c=Y, edgecolors="k", cmap=plt.cm.Paired)


plt.xticks(())
plt.yticks(())

plt.show()
print(Y)

confusion = np.zeros((3,3))
pSpecies = logreg.predict(X)
Z = np.array([dic[s] for s in pSpecies])
for i in range(len(Y)):
    tLabel = Y[i] - 1
    pLabel = Z[i] - 1 
    confusion[tLabel][pLabel] += 1
print(confusion)
